apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: techtrends
  name: techtrends
  namespace: {{ .Values.namespace.name }} 
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: techtrends
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge}}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable}}
    type: {{ .Values.strategy.type}}
  template:
    metadata:
      labels:
        app: techtrends
    spec:
      containers:
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: IfNotPresent 
        name: techtrends
        ports:
        - containerPort: {{ .Values.containers.ports.containerPort}}
        livenessProbe:
          httpGet:
            path: /healthz         # The path to check for the liveness probe
            port: {{ .Values.livenessProbe.httpGet.port}}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds}}  # Wait this many seconds before starting the probe
          periodSeconds: {{ .Values.livenessProbe.httpGet.periodSeconds}}        # Check the probe every 10 seconds
        readinessProbe:
          httpGet:
            path: /healthz         # The path to check for the readiness probe
            port: {{ .Values.readinessProbe.httpGet.port}}             # The port to check on
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds}}   # Wait this many seconds before starting the probe
          periodSeconds: {{ .Values.readinessProbe.httpGet.periodSeconds}}  
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}


